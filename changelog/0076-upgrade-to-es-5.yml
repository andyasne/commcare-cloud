title: Elasticsearch upgrade from 2.4.6 to 5.6.16
key: upgrade-to-es-5
date: 2024-01-14
optional_per_env: no
min_commcare_version: 3208896a555c69be119bbd7f0d06de90120b6d14
max_commcare_version:
context: |
  Upgrade to Elasticsearch 5.

  CommCare HQ releases after March 1, 2024 will not support Elasticsearch 2.x.
  So we strongly recommend applying this change before then.

details: |
  As part of our ongoing effort to keep CommCare HQ up to date with the latest tools and
  libraries we have upgraded Elasticsearch from version 2.4.6 to 5.6.16.

update_steps: |
  This process should be followed after Reindexing is complete for all indices. Refer to the previous [changelog](https://commcare-cloud.readthedocs.io/en/latest/changelog/0075-reindex-all-indexes-for-es-upgrade.html) for further details.

  After you ensure that you have followed the steps mentioned in the previous changelog, you are all set to move forward with upgrading your Elasticsearch cluster to version 5.

  ### Pre-Upgrade Steps

  1. Start by ssh-ing into the control machine.

    ```
      cchq <env> ssh control
    ```

  2. Start a new tmux session

    ```
      tmux new -s es_upgrade
    ```

  3. For commands including `${ENV}` and `${ES_HOST}` below to work, make sure to set `ENV` to the name of your environment, and `ES_HOST` to the IP address of one of your ES nodes:
    
    ```
      ENV=<env>
      ES_HOST=$(cchq ${ENV} lookup elasticsearch:0 | cut -d' ' -f1)
    ```

  4. Delete old and unused CommCare Indices by running the following commands. The command will ask you confirm the deletion by typing in the index cname. 
    ```
      cchq ${ENV} django-manage elastic_sync_multiplexed delete apps
      cchq ${ENV} django-manage elastic_sync_multiplexed delete cases
      cchq ${ENV} django-manage elastic_sync_multiplexed delete case_search
      cchq ${ENV} django-manage elastic_sync_multiplexed delete domains
      cchq ${ENV} django-manage elastic_sync_multiplexed delete forms
      cchq ${ENV} django-manage elastic_sync_multiplexed delete groups
      cchq ${ENV} django-manage elastic_sync_multiplexed delete sms
      cchq ${ENV} django-manage elastic_sync_multiplexed delete users
    ``` 
  
  5. Delete residual indices from elasticsearch that do not belong to CommCare. The command will ask you to confirm the deletion by typing in the index name.
    
    ```
      cchq ${ENV} django-manage elastic_sync_multiplexed remove_residual_indices
    ```

  6. Make sure that the disk usage is below 47%,
  or that you have a place to back up to on another disk or remotely. You can check disk usage on each elasticsearch host usage by running:

    ```
      cchq ${ENV} run-shell-command elasticsearch  "du -sh  /opt/data/elasticsearch-2.4.6" -b
    ```

  7. After you have figured out the backup strategy and ensured sufficient disk space, continue with the steps below.

  ### Upgrade Steps:

  1. Add the following parameters to your environment's `public.yml`:
    
    ```
    elasticsearch_version: 5.6.16
    elasticsearch_download_sha256: 6b035a59337d571ab70cea72cc55225c027ad142fbb07fd8984e54261657c77f.
    ...
    localsettings:
      ...
      ELASTICSEARCH_MAJOR_VERSION: 5
    ```

  2. Pull the latest commcare-cloud changes on control machine.
    
    ```
      cd $COMMCARE_CLOUD_REPO && git pull
    ```
  3. Stop commcare services.

    ```
      cchq ${ENV} downtime start
    ```
  
  4. Apply the settings that you have updated in Step 8.

    ```
      cchq ${ENV} update-config
    ```

  5. Disable Elasticsearch shard allocation. It should already be disabled but for ensuring that its already disabled.

    ```
      curl -X PUT "${ES_HOST}:9200/_cluster/settings?pretty" -H 'Content-Type: application/json' -d'
      {
        "persistent": {
          "cluster.routing.allocation.enable": "none"
        }
      }
      '

    ```

  6. Perform a synced flush.

    ```
      curl -X POST "${ES_HOST}:9200/_flush/synced?pretty"  # safe to reissue a few times if it fails
    ```

  7. Stop the Monit and Elasticsearch services.

    ```
      cchq ${ENV} run-shell-command elasticsearch "service monit stop" -b

      cchq ${ENV} run-shell-command elasticsearch "service elasticsearch stop" -b
    ```

  8. Make a backup of the 2.4.6 data directory. If you are backing up on the same machine then one way to do it is by:
    
    ```
      cchq ${ENV} run-shell-command elasticsearch "cp -r /opt/data/elasticsearch-2.4.6 /opt/data/elasticsearch-2.4.6-backup" -b
    ```
  9. Install and run the new version of Elasticsearch.

    ```
      cchq ${ENV} ansible-playbook deploy_stack.yml --limit=elasticsearch --tags=elasticsearch
    ```

  10. Stop the Monit and Elasticsearch services.

    ```
      cchq ${ENV} run-shell-command elasticsearch "service monit stop" -b

      cchq ${ENV} run-shell-command elasticsearch "service elasticsearch stop" -b
    ```

  11. Rename the newly created 5.6.16 data directory so it’s out of the way and then move the 2.4.6 data directory to the new 5.6.16 data directory location.

    ```
      cchq ${ENV} run-shell-command elasticsearch "mv /opt/data/elasticsearch-5.6.16 /opt/data/elasticsearch-5.6.16-new-installation" -b

      cchq ${ENV} run-shell-command elasticsearch "mv /opt/data/elasticsearch-2.4.6 /opt/data/elasticsearch-5.6.16" -b
    ```

  12. Verify the size of the data directory, this should spit out all the indexes on disk.

    ```
      cchq ${ENV} run-shell-command elasticsearch "du -chd 1 /opt/data/elasticsearch-5.6.16" -b
    ```

  13. Verify the permissions, ensure that both user and group are set to `elasticsearch`.

    ```
      cchq ${ENV} run-shell-command  elasticsearch  "ls -al  /opt/data/elasticsearch-5.6.16" -b
    ```

  14. Start the Monit and Elasticsearch services.

    ```
      cchq ${ENV} run-shell-command elasticsearch "service monit start" -b

      cchq ${ENV} run-shell-command elasticsearch "service elasticsearch start" -b 
    ```

  15. You can also check the shard allocation status of the indices by running: 

    ```
      cchq ${ENV} django-manage elastic_sync_multiplexed display_shard_info
    ```
  
    If your shards are not getting allocated, you can try enabling the cluster routing settings by running:

    ```
      curl -X PUT "${ES_HOST}:9200/_cluster/settings?pretty" -H 'Content-Type: application/json' -d'
      {
        "persistent": {
          "cluster.routing.allocation.enable": "all"
        }
      }
      '
    ```


  16. Verify that the cluster status is yellow. The cluster status can be red in the beginning and should go yellow and then green eventually. You can run the command below periodically to monitor the cluster status. 

    ```
      curl -XGET "${ES_HOST}:9200/_cluster/health?pretty"
    ```

  17. Start the site.
    
    ```
      cchq ${ENV} downtime end
    ```

  18. Verify that CommCare is accessible and functioning properly.

  19. Run the following command to ensure that all the services are working perfectly.

    ```
      cchq ${ENV} django-manage check_services
    ```

  20. If everything is fine then delete the backup directory that was created in the previous step. If space is not a concern then this can be done the next day too.

    ```
      cchq ${ENV} run-shell-command elasticsearch "rm -rf /opt/data/elasticsearch-2.4.6-backup" -b
    ```

  ### Recovery From Backup

  If due to any circumstances the upgrade process did not succeed on your environment and you need to roll back to Elasticsearch 2, you are advised to reach out to us on [Dimagi Forum](https://forum.dimagi.com) with the relevant logs first.
  
  You can follow the following steps to rollback to Elasticsearch 2.

  1. Revert the following parameters to your environment's `public.yml`:
    ```
      elasticsearch_version: 2.4.6
      elasticsearch_download_sha256: 5f7e4bb792917bb7ffc2a5f612dfec87416d54563f795d6a70637befef4cfc6f.
      ...
      localsettings:
      ...
        ELASTICSEARCH_MAJOR_VERSION: 2
    ```

  2. Apply the changes above on your environment:

    ```
      cchq ${ENV} update-config
    ```

  3. Run deploy stack.

    ```
      cchq ${ENV} ansible-playbook deploy_stack.yml --limit=elasticsearch --tags=elasticsearch
    ```

  4. Stop the Monit and Elasticsearch services.

    ```
      cchq ${ENV} run-shell-command elasticsearch "service monit stop" -b

      cchq ${ENV} run-shell-command elasticsearch "service elasticsearch stop" -b
    ```

  5. Rename the newly created 2.4.6 data directory so it’s out of the way and then copy the 2.4.6 back up data directory to the new 2.4.6 data directory location. If you have backed up data on the same machine then you can run:

    ```
      cchq ${ENV} run-shell-command elasticsearch "mv /opt/data/elasticsearch-2.4.6 /opt/data/elasticsearch-2.4.6-new-installation" -b

      cchq ${ENV} run-shell-command elasticsearch "cp -r /opt/data/elasticsearch-2.4.6-backup /opt/data/elasticsearch-2.4.6" -b
    ```

  6. Start the Monit and Elasticsearch services.
    
    ```
      cchq ${ENV} run-shell-command elasticsearch "service monit start" -b

      cchq ${ENV} run-shell-command elasticsearch "service elasticsearch start" -b 
    ```
  7. Verify that the cluster status is yellow.
    
    ```
      curl -XGET "${ES_HOST}:9200/_cluster/health?pretty"
    ```
  8. Start the site

    ```
      cchq ${ENV} downtime end
    ```
